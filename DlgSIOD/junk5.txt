(define (iter-thunk thunk count)
(define (iter-monofunc monofunc count)
(define (sublis l exp)
(define consp pair?)
(define (prognify forms)
(define (defmac-macro form)
(define defmac 'defmac-macro)
(defmac (push form)
(defmac (pop form)
(defmac (defvar form)
(defmac (defun form)
(defmac (setq form)
(define progn begin)
(define the-empty-stream ())
(define empty-stream? null?)
(define (*cons-stream head tail-future)
(define head car)
(define (tail x)
(defmac (cons-stream form)
(define (enumerate-interval low high)
(define (print-stream-elements x)
(define (sum-stream-elements x)
(define (standard-fib x)
(define (call-with-current-continuation fcn)
(define (loop-test n f)
(defun atom (x)
(define eq eq?)
(define null null?)
(defmac (+internal-comma form)
(define +internal-comma-atsign +internal-comma)
(define +internal-comma-dot +internal-comma)
(defmac (+internal-backquote form)
(defun backquotify (x)
(defun rplacd (a b)
(define sfib
(define sloop-test
(defvar *fasdump-hash* t)
(defun fasl-open (filename mode)
(defun fasl-close (table)
(defun fasload args
(defun fasdump (filename forms)
(defun compile-file (filename)
(defvar *properties* (cons-array 100))
(defun get (sym key)
(defun putprop (sym val key)
(defun addl (l)
